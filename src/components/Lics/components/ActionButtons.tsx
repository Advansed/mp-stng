// src/components/Lics/components/AddLics/ActionButtons.tsx

import React from 'react';
import { IonButton, IonIcon } from '@ionic/react';
import { 
  arrowBackOutline, 
  refreshOutline, 
  checkmarkOutline, 
  hourglassOutline 
} from 'ionicons/icons';
import { ActionButtonsProps, AddLicMode } from './types';
import { ADD_LICS_CONSTANTS } from './constants';

export function ActionButtons({ 
  mode, 
  canSubmit, 
  loading, 
  onSubmit, 
  onBack, 
  onReset 
}: ActionButtonsProps): JSX.Element {

  // ========================
  // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
  // ========================

  const getSubmitButtonText = (): string => {
    if (loading) {
      return '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...';
    }
    
    switch (mode) {
      case AddLicMode.BY_CODE:
        return '–î–æ–±–∞–≤–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É';
      case AddLicMode.BY_ADDRESS:
        return '–î–æ–±–∞–≤–∏—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É';
      default:
        return '–î–æ–±–∞–≤–∏—Ç—å';
    }
  };

  const getBackButtonText = (): string => {
    switch (mode) {
      case AddLicMode.BY_CODE:
      case AddLicMode.BY_ADDRESS:
        return '–ö –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞';
      default:
        return '–ù–∞–∑–∞–¥';
    }
  };

  const getResetButtonText = (): string => {
    switch (mode) {
      case AddLicMode.BY_CODE:
        return '–û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É';
      case AddLicMode.BY_ADDRESS:
        return '–°–±—Ä–æ—Å–∏—Ç—å –∞–¥—Ä–µ—Å';
      default:
        return '–°–±—Ä–æ—Å–∏—Ç—å';
    }
  };

  // ========================
  // –†–ï–ù–î–ï–†–ò–ù–ì
  // ========================

  return (
    <div className="action-buttons">
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
      <div className="flex fl-space ml-1 mr-1 mb-1 mt-1">
        {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
        <IonButton
          fill="outline"
          color="medium"
          size="default"
          disabled={loading}
          onClick={onBack}
          className="flex-shrink-0"
        >
          <IonIcon icon={arrowBackOutline} slot="start" />
          {getBackButtonText()}
        </IonButton>

        {/* Spacer */}
        <div className="flex-1"></div>

        {/* –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å" */}
        <IonButton
          fill="solid"
          color="primary"
          size="default"
          disabled={!canSubmit || loading}
          onClick={onSubmit}
          className="flex-shrink-0"
        >
          <IonIcon 
            icon={loading ? hourglassOutline : checkmarkOutline} 
            slot="start" 
          />
          {getSubmitButtonText()}
        </IonButton>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
      <div className="flex justify-center ml-1 mr-1 mb-1">
        {/* –ö–Ω–æ–ø–∫–∞ "–°–±—Ä–æ—Å–∏—Ç—å" */}
        <IonButton
          fill="clear"
          color="medium"
          size="small"
          disabled={loading}
          onClick={onReset}
        >
          <IonIcon icon={refreshOutline} slot="start" />
          {getResetButtonText()}
        </IonButton>
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div className="ml-1 mr-1 mb-05">
        {loading ? (
          <p className="text-center fs-07 color-primary">
            ‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...
          </p>
        ) : !canSubmit ? (
          <p className="text-center fs-07 color-medium">
            üí° –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
          </p>
        ) : (
          <p className="text-center fs-07 color-success">
            ‚úÖ –§–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
          </p>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∂–∏–º–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ development) */}
      {process.env.NODE_ENV === 'development' && (
        <div className="ml-1 mr-1 mb-05">
          <p className="text-center fs-06 color-light">
            Debug: Mode={mode}, CanSubmit={canSubmit.toString()}, Loading={loading.toString()}
          </p>
        </div>
      )}
    </div>
  );
}

// ========================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´
// ========================

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export function FormProgress({ 
  mode, 
  completedSteps, 
  totalSteps 
}: { 
  mode: AddLicMode; 
  completedSteps: number; 
  totalSteps: number; 
}): JSX.Element {
  const progress = (completedSteps / totalSteps) * 100;
  
  return (
    <div className="form-progress ml-1 mr-1 mb-1">
      <div className="flex justify-between items-center mb-05">
        <span className="fs-07 color-medium">
          –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
        </span>
        <span className="fs-07 color-medium">
          {completedSteps}/{totalSteps}
        </span>
      </div>
      <div className="progress-bar">
        <div 
          className="progress-bar-fill" 
          style={{ width: `${progress}%` }}
        ></div>
      </div>
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–≥–æ–≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
export function FormSteps({ 
  mode, 
  currentStep 
}: { 
  mode: AddLicMode; 
  currentStep: number; 
}): JSX.Element {
  const getSteps = () => {
    switch (mode) {
      case AddLicMode.BY_CODE:
        return [
          '–ù–æ–º–µ—Ä –õ–°',
          '–§–ò–û',
          '–ì–æ—Ç–æ–≤–æ'
        ];
      case AddLicMode.BY_ADDRESS:
        return [
          '–ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç',
          '–£–ª–∏—Ü–∞',
          '–î–æ–º',
          '–ù–æ–º–µ—Ä –õ–° –∏ –§–ò–û',
          '–ì–æ—Ç–æ–≤–æ'
        ];
      default:
        return [];
    }
  };

  const steps = getSteps();

  return (
    <div className="form-steps ml-1 mr-1 mb-1">
      <div className="flex justify-between">
        {steps.map((step, index) => (
          <div 
            key={index}
            className={`form-step ${index <= currentStep ? 'completed' : 'pending'}`}
          >
            <div className="form-step-number">
              {index <= currentStep ? (
                <IonIcon icon={checkmarkOutline} />
              ) : (
                index + 1
              )}
            </div>
            <div className="form-step-label fs-07">
              {step}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
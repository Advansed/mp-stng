// src/components/Lics/components/types.ts

// ========================
// –û–°–ù–û–í–ù–´–ï –ò–ù–¢–ï–†–§–ï–ô–°–´ LICS
// ========================

export interface LicsCounter {
  counterId: string;
  name: string;
  indice?: number;
  period?: string;
  predIndice?: number;
  predPeriod?: string;
}

export interface LicsItem {
  id: string;
  code: string;
  name: string;
  address: string;
  sum: number;
  counters?: LicsCounter[];
  selected?: LicsCounter;
  order?: any; // –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –æ–ø–ª–∞—Ç—ã
}

export interface LicsIndication {
  date: string;
  value: number;
}

export interface LicsState {
  info: LicsItem[];
  upd: number;
  page: LicsPage;
  item: LicsItem | undefined;
}

// ========================
// ENUM –î–õ–Ø –°–¢–†–ê–ù–ò–¶
// ========================

export enum LicsPage {
  MAIN = 0,
  ADD_LIC = 1,            // üÜï –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–º–µ—Å—Ç–æ ADD_LIC_1 –∏ ADD_LIC_2
  HISTORY = 3,
  PAYMENTS = 4,
  PAYMENTS_TO = 5,
  INDICES = 6,
  EQUARING = 7,
  SBER_PAY = 8,
  HISTORY_INDICES = 9,
  ALFA_BANK = 10
}

// ========================
// –¢–ò–ü–´ ADDLICS - –ù–û–í–´–ï
// ========================

// –†–µ–∂–∏–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞
export enum AddLicMode {
  SELECTION = 'selection',     // –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞
  BY_CODE = 'by_code',        // –ü–æ –Ω–æ–º–µ—Ä—É –õ–°
  BY_ADDRESS = 'by_address'   // –ü–æ –∞–¥—Ä–µ—Å—É
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∫–æ–¥—É
export interface AddLicByCodeData {
  lc: string;          // –ù–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞
  fio: string;         // –§–ò–û
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É
export interface AddLicByAddressData {
  settlementId?: string;
  settlementName?: string;
  streetId?: string;
  streetName?: string;
  houseId?: string;
  houseNumber?: string;
  apartment?: string;
  lc: string;
  fio: string;
}

// –°–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
export interface Settlement {
  s_id: string;
  name: string;
  streets?: Street[];
}

export interface Street {
  ids: string;
  name: string;
  houses?: House[];
}

export interface House {
  id: string;
  number: string;
}

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ AddLics
export interface AddLicsState {
  mode: AddLicMode;
  loading: boolean;
  message: string;
  
  // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º
  codeData: AddLicByCodeData;
  addressData: AddLicByAddressData;
  
  // –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
  settlements: Settlement[];
  selectedSettlement?: Settlement;
  selectedStreet?: Street;
  selectedHouse?: House;
}

// ========================
// –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ò–ü–´
// ========================

export interface SetPageFunction {
  (page: number): void;
}

export interface SetItemFunction {
  (item: LicsItem): void;
}

// ========================
// –¢–ò–ü–´ –î–õ–Ø STORE
// ========================

export interface StoreState {
  lics: LicsItem[];
  login: {
    token: string;
    monthes?: any;
    borders?: {
      from: number;
      to: number;
    };
  };
  profile: {
    lics?: LicsItem[];
  };
  [key: string]: any;
}

// ========================
// –ü–†–û–ü–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í - –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï
// ========================

export interface ItemsProps {
  info: LicsItem[];
  setItem: SetItemFunction;
  setPage: SetPageFunction;
}

export interface AddLicProps {
  setPage: SetPageFunction;
}

export interface HistoryProps {
  item: LicsItem | undefined;
}

export interface PaymentsProps {
  item: LicsItem | undefined;
  setPage: SetPageFunction;
}

export interface IndicesProps {
  item: LicsItem | undefined;
  setPage: SetPageFunction;
}

// ========================
// –ü–†–û–ü–°–´ ADDLICS –ö–û–ú–ü–û–ù–ï–ù–¢–û–í - –ù–û–í–´–ï
// ========================

export interface AddLicsProps {
  setPage: SetPageFunction;
  initialMode?: AddLicMode;
}

export interface ModeSelectionProps {
  onModeSelect: (mode: AddLicMode) => void;
}

export interface CodeFormProps {
  data: AddLicByCodeData;
  onChange: (field: keyof AddLicByCodeData, value: string) => void;
  onSubmit: () => void;
  loading: boolean;
}

export interface AddressFormProps {
  data: AddLicByAddressData;
  settlements: Settlement[];
  selectedSettlement?: Settlement;
  selectedStreet?: Street;
  selectedHouse?: House;
  onChange: (field: keyof AddLicByAddressData, value: string) => void;
  onSettlementChange: (settlement: Settlement) => void;
  onStreetChange: (street: Street) => void;
  onHouseChange: (house: House) => void;
  onSubmit: () => void;
  loading: boolean;
}

export interface ActionButtonsProps {
  mode: AddLicMode;
  canSubmit: boolean;
  loading: boolean;
  onSubmit: () => void;
  onBack: () => void;
  onReset: () => void;
}

// ========================
// –¢–ò–ü–´ –î–õ–Ø –•–£–ö–ê USEADDLICS - –ù–û–í–´–ï
// ========================

export interface UseAddLicsReturn {
  // State
  state: AddLicsState;
  
  // Mode management
  setMode: (mode: AddLicMode) => void;
  resetToSelection: () => void;
  
  // Form data management
  updateCodeData: (field: keyof AddLicByCodeData, value: string) => void;
  updateAddressData: (field: keyof AddLicByAddressData, value: string) => void;
  
  // Address form specific
  loadSettlements: () => Promise<void>;
  selectSettlement: (settlement: Settlement) => Promise<void>;
  selectStreet: (street: Street) => Promise<void>;
  selectHouse: (house: House) => void;
  
  // Form submission
  submitByCode: () => Promise<boolean>;
  submitByAddress: () => Promise<boolean>;
  
  // Utilities
  validateCodeForm: () => boolean;
  validateAddressForm: () => boolean;
  resetForms: () => void;
  clearMessage: () => void;
  setMessage: (message: string) => void;
}

// ========================
// –¢–ò–ü–´ –î–õ–Ø API RESPONSES - –ù–û–í–´–ï
// ========================

export interface ApiResponse<T = any> {
  error: boolean;
  message: string;
  data?: T;
}

export interface AddAccountParams {
  token: string;
  LC?: string;
  fio: string;
  s_id?: string;        // –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É
  ids?: string;         // –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É  
  house_id?: string;    // –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É
  apartment?: string;   // –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –∞–¥—Ä–µ—Å—É
}

export interface GetSettlementsResponse {
  settlements: Settlement[];
}

export interface GetStreetsResponse {
  streets: Street[];
}

export interface GetHousesResponse {
  houses: House[];
}